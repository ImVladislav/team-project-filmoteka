{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-dae15f3ea5b72565.js","src/index.js","src/js/utilitiesJS/selectLang.js","src/js/utilitiesJS/murkupGalleryOnPageLoading.js","node_modules/@parcel/runtime-js/lib/runtime-25d2c561babacffc.js","src/js/gallery.js","src/js/onSearchForm.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.22f415f0.js\\\",\\\"bRNsJ\\\":\\\"warship.6c844eb5.jpg\\\",\\\"5UbS1\\\":\\\"index.fc1795ad.css\\\",\\\"5fZck\\\":\\\"index.e43f1ed4.js\\\"}\"));","import './js/modal';\nimport './js/utilitiesJS/selectLang';\nimport './js/gallery';\nimport './js/onSearchForm';\nimport './js/pagination';\nimport './js/modal-team';\nimport './js/theme-dark';\nimport './js/treiler';\nimport './js/scrollTop';\nimport './js/modal-login';\nimport './js/spinner';\nimport './js/firebase';\n","import { serverApi } from './serverApi';\nimport { refs } from './refs';\n\nrefs.langValue.addEventListener('change', onSelectChange);\n\nif (localStorage.getItem('language')) {\n  const parsedData = JSON.parse(localStorage.getItem('language'));\n  refs.langValue.value = parsedData;\n  serverApi.setlang(parsedData);\n}\n\nfunction onSelectChange(evt) {\n  const language = evt.target.value;\n\n  serverApi.setlang(language);\n\n  localStorage.setItem('language', JSON.stringify(language));\n\n  location.reload();\n}\n","import Pagination from 'tui-pagination';\n\nimport { refs } from './refs';\nimport { serverApi } from './serverApi';\nimport { posterСheck } from './posterCheck';\nimport { options } from '../pagination';\nimport { spinnerPlay, spinnerStop } from '../spinner';\nimport { genresArr, genresUK } from './genres';\nimport { spinnerPlay, spinnerStop } from '../spinner';\nimport warship from '../../images/warship.jpg';\n\nconst pagination = new Pagination(refs.tuiContainer, options);\n\nspinnerPlay(); // ! не пересовувати\n\npagination.on('beforeMove', async event => {\n  pagination.setTotalItems(serverApi.totalResults);\n  const currentPage = event.page;\n  serverApi.setPage(currentPage);\n  murkupGallery();\n});\n\nexport function murkupGalleryOnPageLoading(movies) {\n  serverApi.setPage(1);\n\n  const moviesMurkup = movies\n\n    .map(\n      ({ original_title, title, poster_path, id, genre_ids, release_date }) => {\n        const src = posterСheck(poster_path);\n\n        let genresMovie = null;\n        let releaseDate = null;\n\n        // проверка на жанры фильмов\n\n        const genresMovies = genresArr.reduce((acc, genre) => {\n          if (genre_ids.includes(genre.id)) {\n            acc.push(genre.name);\n          }\n          return acc;\n        }, []);\n\n        if (genresMovies.length > 3) {\n          genresMovie = genresMovies.slice(0, 2);\n          genresMovie.splice(2, 1, 'Other');\n        } else if (genresMovies.length === 0) {\n          genresMovie = [`Genres not found`];\n        } else {\n          genresMovie = genresMovies;\n        }\n\n        // проверка на дату релиза\n        if (!release_date) {\n          releaseDate = 'Release data no found';\n        } else {\n          releaseDate = release_date.slice(0, 4);\n        }\n\n        return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <div>\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genresMovie.join(\n          `, `\n        )} | ${releaseDate}</p></div>\n      </li>`;\n      }\n    )\n    .join(``);\n\n  if (refs.langValue.value === 'ru') {\n    return (refs.gallery.innerHTML = `<li class=\"warship\"><img src=\"${warship}\" /></li>`);\n  }\n\n  return (refs.gallery.innerHTML = moviesMurkup);\n}\n\nexport async function murkupGallery() {\n  const movies = await serverApi.getPopularMovie();\n\n  const total_results = movies.total_results;\n  serverApi.setTotalResults(total_results);\n\n  murkupGalleryOnPageLoading(movies.results);\n\n  spinnerStop();\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bRNsJ\")).toString();","import 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { murkupGallery } from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { closeModal, onOpenModal } from './modal';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\nimport { handleClick } from './treiler';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\nmurkupGallery();\n\nrefs.gallery.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n\n  spinnerPlay();\n\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n\n  spinnerStop();\n\n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  const trailerBtn = document.querySelector('.btn-ytb');\n  const iconTrailerBtn = document.querySelector('.icon-youtube');\n\n  serverApi.getTrailer(id).then(({ results }) => {\n    if (results.length !== 0) {\n      iconTrailerBtn.classList.add('icon-youtube__enable');\n      iconTrailerBtn.classList.remove('icon-youtube__disabled');\n    } else {\n      iconTrailerBtn.classList.remove('icon-youtube__enable');\n      iconTrailerBtn.classList.add('icon-youtube__disabled');\n      trailerBtn.setAttribute('disabled', true);\n      Notiflix.Notify.failure('Oh! Unfortunately there is no trailer', {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      });\n    }\n  });\n\n  watchBtn.addEventListener('click', () => onAddWatchClick(detailsMovie));\n  queueBtn.addEventListener('click', () => onAddQueueClick(detailsMovie));\n  trailerBtn.addEventListener('click', handleClick);\n\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","import Notiflix from 'notiflix';\nimport Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { options } from './pagination';\nimport {\n  murkupGalleryOnPageLoading,\n  murkupGallery,\n} from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\nlet searchQuery = ' ';\nrefs.formRef.addEventListener('submit', onSubmitClick);\n\nasync function onSubmitClick(event) {\n  event.preventDefault();\n\n  spinnerPlay();\n\n  const inputRef = document.querySelector('.header__form-input');\n  inputRef.addEventListener('change', () => {\n    serverApi.setPage(1);\n    serverApi.setRequestCount();\n  });\n\n  searchQuery = event.currentTarget.elements.serch_film.value\n    .trim()\n    .toLowerCase();\n\n  if (!searchQuery) {\n    Notiflix.Notify.failure('Enter the name of the movie', {\n      position: 'center-top',\n      fontFamily: 'inherit',\n      borderRadius: '25px',\n      clickToClose: true,\n    });\n    return;\n  }\n\n  await murkupSearchMovie();\n\n  spinnerStop();\n\n  spinnerStop();\n\n  const pagination = new Pagination(refs.tuiContainer, options);\n\n  pagination.on('beforeMove', event => {\n    const currentPage = event.page;\n    serverApi.setPage(currentPage);\n    serverApi.incrementRequestCount();\n    murkupSearchMovie();\n  });\n}\n\nexport async function murkupSearchMovie() {\n  const data = await serverApi.getMovieOnDemand(searchQuery);\n  const movies = data.results;\n  const total_results = data.total_results;\n  options.totalItems = total_results;\n\n  if (total_results < 20) {\n    const item = document.querySelector('.tui-js');\n    item.classList.add('visually-hidden');\n  } else {\n    const item = document.querySelector('.tui-js');\n    item.classList.remove('visually-hidden');\n  }\n\n  if (movies.length === 0) {\n    murkupGallery();\n    Notiflix.Notify.failure(\n      'Search result not successful. Enter the correct movie name and',\n      {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n    searchQuery = ' ';\n    return;\n  }\n\n  murkupGalleryOnPageLoading(movies);\n}\n"],"names":["parcelRequire","register","JSON","parse","$185lj","refs","langValue","addEventListener","evt","language","target","value","serverApi","setlang","localStorage","setItem","stringify","location","reload","getItem","parsedData","$3fz09","$fb9GJ","$961ac6ba8a9b0f3e$exports","URL","resolve","import","meta","url","toString","$47cbafa11ce31a61$var$pagination","$parcel$interopDefault","tuiContainer","$2nhTy","options","$47cbafa11ce31a61$export$ce0b9808aa57ae7d","movies","setPage","moviesMurkup","map","original_title","title","poster_path","id","genre_ids","release_date","src","$1fedI","genresMovie","releaseDate","genresMovies","$bRnc2","genresArr","reduce","acc","genre","includes","push","name","length","slice","splice","join","gallery","innerHTML","async","$47cbafa11ce31a61$export$6bb355015a1580b","getPopularMovie","total_results","setTotalResults","results","$04jNI","spinnerStop","spinnerPlay","on","event","setTotalItems","totalResults","currentPage","page","e","parentElement","className","$bTcpz","onOpenModal","dataset","detailsMovie","getDetailsMovie","movieMurkup","$it60l","movieDescriptionMurkup","movieDescription","insertAdjacentHTML","$lFT8c","makeWatchTextContent","makeQueueTextContent","watchBtn","document","querySelector","queueBtn","closeModalBtn","trailerBtn","iconTrailerBtn","getTrailer","then","classList","add","remove","setAttribute","$eWCmQ","Notify","failure","position","fontFamily","borderRadius","clickToClose","$9Co7P","onAddWatchClick","onAddQueueClick","$c8VpK","handleClick","closeModal","$307187451cbc0239$var$searchQuery","$307187451cbc0239$export$80a6146058001a40","data","getMovieOnDemand","totalItems","formRef","event1","preventDefault","setRequestCount","currentTarget","elements","serch_film","trim","toLowerCase","incrementRequestCount"],"version":3,"file":"index.22f415f0.js.map"}