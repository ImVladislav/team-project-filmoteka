{"mappings":"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","sources":["src/index.js","src/js/gallery.js","src/js/utilitiesJS/murkupGalleryOnPageLoading.js","src/js/onSearchForm.js"],"sourcesContent":["import './js/modal';\nimport './js/gallery';\nimport './js/onSearchForm';\nimport './js/pagination';\nimport './js/modal-team';\nimport './js/theme-dark';\nimport './js/treiler';\nimport './js/scrollTop';\nimport './js/modal-login';\nimport './js/spinner';\n","import 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { murkupGallery } from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { closeModal, onOpenModal } from './modal';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\nimport { handleClick } from './treiler';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\n\nmurkupGallery();\n\nrefs.gallery.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n\n  spinnerPlay();\n\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n\n  spinnerStop();\n  \n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  const trailerBtn = document.querySelector('.btn-ytb');\n\n  watchBtn.addEventListener('click', () => onAddWatchClick(detailsMovie));\n  queueBtn.addEventListener('click', () => onAddQueueClick(detailsMovie));\n  trailerBtn.addEventListener('click', handleClick);\n\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","import Pagination from 'tui-pagination';\n\nimport { refs } from './refs';\nimport { serverApi } from './serverApi';\nimport { posterСheck } from './posterCheck';\nimport { options } from '../pagination';\nimport { genresArr, genresUK } from './genres';\nimport { spinnerPlay, spinnerStop } from '../spinner';\n\n\nconst container = document.querySelector('.tui-pagination');\n\nconst pagination = new Pagination(container, options);\n\nspinnerPlay();\n\npagination.on('beforeMove', async event => {\n\nspinnerPlay();\n\n  pagination.setTotalItems(serverApi.totalResults);\n  const currentPage = event.page;\n  serverApi.setPage(currentPage);\n  murkupGallery();\n});\n\nexport function murkupGalleryOnPageLoading(movies) {\n  const moviesMurkup = movies\n\n    .map(\n      ({ original_title, title, poster_path, id, genre_ids, release_date }) => {\n        const src = posterСheck(poster_path);\n\n        let genresMovie = null;\n        let releaseDate = null;\n\n        // проверка на жанры фильмов\n\n        const genresMovies = genresArr.reduce((acc, genre) => {\n          if (genre_ids.includes(genre.id)) {\n            acc.push(genre.name);\n          }\n          return acc;\n        }, []);\n\n        if (genresMovies.length > 3) {\n          genresMovie = genresMovies.slice(0, 2);\n          genresMovie.splice(2, 1, 'Other');\n        } else if (genresMovies.length === 0) {\n          genresMovie = [`Genres not found`];\n        } else {\n          genresMovie = genresMovies;\n        }\n\n        // проверка на дату релиза\n        if (release_date === '') {\n          releaseDate = 'Release data no found';\n        } else {\n          releaseDate = release_date.slice(0, 4);\n        }\n\n        return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" loading=\"lazy\" width=\"368\" height=\"591\"/>\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genresMovie.join(`, `)} | ${releaseDate}</p>\n      </li>`;\n      }\n    )\n    .join(``);\n\n  return (refs.gallery.innerHTML = moviesMurkup);\n}\n\nexport async function murkupGallery() {\n  const movies = await serverApi.getPopularMovie();\n\n  const total_results = movies.total_results;\n  serverApi.setTotalResults(total_results);\n\n  murkupGalleryOnPageLoading(movies.results);\n\n  spinnerStop();\n}\n","import Notiflix from 'notiflix';\nimport Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { options } from './pagination';\nimport { murkupGalleryOnPageLoading } from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\n\nlet searchQuery = ' ';\nrefs.formRef.addEventListener('submit', onSubmitClick);\n\nasync function onSubmitClick(event) {\n  event.preventDefault();\n\n  spinnerPlay();\n\n  const inputRef = document.querySelector('.header__form-input');\n  inputRef.addEventListener('change', () => {\n    serverApi.setPage(1);\n    serverApi.setRequestCount();\n  });\n\n  searchQuery = event.currentTarget.elements.serch_film.value\n    .trim()\n    .toLowerCase();\n\n  if (!searchQuery) {\n    Notiflix.Notify.failure('Enter the name of the movie', {\n      position: 'center-top',\n      fontFamily: 'inherit',\n      borderRadius: '25px',\n      clickToClose: true,\n    });\n    return;\n  }\n\n  await murkupSearchMovie();\n  \n  spinnerStop();\n\n  const container = document.querySelector('.tui-pagination');\n\n  const pagination = new Pagination(container, options);\n\n  pagination.on('beforeMove', event => {\n    const currentPage = event.page;\n    serverApi.setPage(currentPage);\n    serverApi.incrementRequestCount();\n    murkupSearchMovie();\n  });\n}\n\nexport async function murkupSearchMovie() {\n  const data = await serverApi.getMovieOnDemand(searchQuery);\n  const movies = data.results;\n  const total_results = data.total_results;\n  options.totalItems = total_results;\n\n  if (total_results < 20) {\n    const item = document.querySelector('.tui-js');\n    item.classList.add('visually-hidden');\n  } else {\n    const item = document.querySelector('.tui-js');\n    item.classList.remove('visually-hidden');\n  }\n\n  if (movies.length === 0) {\n    Notiflix.Notify.failure(\n      'Search result not successful. Enter the correct movie name and',\n      {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n    searchQuery = ' ';\n    return;\n  }\n\n  murkupGalleryOnPageLoading(movies);\n}\n"],"names":["parcelRequire","$bpxeT","$0ced5e31662a45f8$var$container","document","querySelector","$0ced5e31662a45f8$var$pagination","$parcel$interopDefault","$1VFfL","$jcFG7","options","$0ced5e31662a45f8$export$ce0b9808aa57ae7d","movies","moviesMurkup","map","param","original_title","title","poster_path","id","genre_ids","release_date","src","$9PJ7S","genresMovie","releaseDate","genresMovies","$4zVoc","genresArr","reduce","acc","genre","includes","push","name","length","slice","splice","concat","join","$hiFhO","refs","gallery","innerHTML","$0ced5e31662a45f8$export$6bb355015a1580b","$0ced5e31662a45f8$var$_murkupGallery","apply","this","arguments","$2TvXO","mark","_callee","total_results","$jaaYu","serverApi","getPopularMovie","_ctx","sent","setTotalResults","results","$j1lrD","spinnerStop","spinnerPlay","on","event","currentPage","setTotalItems","totalResults","page","setPage","$6756f0db6f988caf$var$_onClickMovie","e","detailsMovie","movieMurkup","watchBtn","queueBtn","closeModalBtn","trailerBtn","target","parentElement","className","$5xtVg","onOpenModal","dataset","getDetailsMovie","$kiFmR","movieDescriptionMurkup","movieDescription","insertAdjacentHTML","$5HOzi","makeWatchTextContent","makeQueueTextContent","addEventListener","$4cXS4","onAddWatchClick","onAddQueueClick","$dkUq4","handleClick","closeModal","$98475668925f8ab5$var$searchQuery","$98475668925f8ab5$var$_onSubmitClick","event1","container","preventDefault","setRequestCount","currentTarget","elements","serch_film","value","trim","toLowerCase","$iU1Pc","Notify","failure","position","fontFamily","borderRadius","clickToClose","$98475668925f8ab5$export$80a6146058001a40","incrementRequestCount","$98475668925f8ab5$var$_murkupSearchMovie","data","getMovieOnDemand","totalItems","classList","add","remove","formRef"],"version":3,"file":"index.3647f53a.js.map"}