{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-2a3f372344ac55cb.js","src/index.js","src/js/utilitiesJS/selectLang.js","src/js/utilitiesJS/selectTrend.js","src/js/utilitiesJS/murkupGalleryOnPageLoading.js","node_modules/@parcel/runtime-js/lib/runtime-25d2c561babacffc.js","src/js/utilitiesJS/markupCast.js","node_modules/@parcel/runtime-js/lib/runtime-cb51a74fc6840a87.js","src/js/gallery.js","src/js/onSearchForm.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.8358b049.js\\\",\\\"bRNsJ\\\":\\\"warship.6c844eb5.jpg\\\",\\\"4bOEk\\\":\\\"poster-modal-plug-desktop.fd8c97a1.jpg\\\",\\\"5UbS1\\\":\\\"index.ea7c3452.css\\\",\\\"5fZck\\\":\\\"index.e64cf1a5.js\\\"}\"));","import './js/modal';\nimport './js/utilitiesJS/selectLang';\nimport './js/utilitiesJS/selectTrend';\nimport './js/gallery';\nimport './js/onSearchForm';\nimport './js/pagination';\nimport './js/modal-team';\nimport './js/theme-dark';\nimport './js/treiler';\nimport './js/scrollTop';\nimport './js/modal-login';\nimport './js/spinner';\nimport './js/firebase';\n","import { serverApi } from './serverApi';\nimport { refs } from './refs';\n\nrefs.langValue.addEventListener('change', onSelectChange);\n\nif (localStorage.getItem('language')) {\n  const parsedData = JSON.parse(localStorage.getItem('language'));\n  refs.langValue.value = parsedData;\n  serverApi.setlang(parsedData);\n}\n\nfunction onSelectChange(evt) {\n  const language = evt.target.value;\n\n  serverApi.setlang(language);\n\n  localStorage.setItem('language', JSON.stringify(language));\n\n  location.reload();\n}\n","import { serverApi } from './serverApi';\nimport { refs } from './refs';\n\nrefs.trend.addEventListener('change', onSelectChange);\n\nif (localStorage.getItem('selected-trend')) {\n  const parsedData = JSON.parse(localStorage.getItem('selected-trend'));\n  refs.trend.value = parsedData;\n  serverApi.setTrend(parsedData);\n}\n\nfunction onSelectChange(evt) {\n  const trend = evt.target.value;\n\n  serverApi.setTrend(trend);\n\n  localStorage.setItem('selected-trend', JSON.stringify(trend));\n\n  location.reload();\n}\n","import Pagination from 'tui-pagination';\n\nimport { refs } from './refs';\nimport { serverApi } from './serverApi';\nimport { posterСheck } from './posterCheck';\nimport { options } from '../pagination';\nimport { spinnerPlay, spinnerStop } from '../spinner';\nimport { genresArr, genresUK } from './genres';\nimport { spinnerPlay, spinnerStop } from '../spinner';\nimport warship from '../../images/warship.jpg';\n\nconst pagination = new Pagination(refs.tuiContainer, options);\n\nspinnerPlay(); // ! не пересовувати\n\npagination.on('beforeMove', async event => {\n\n  spinnerPlay();\n  pagination.setTotalItems(serverApi.totalResults);\n\n  if (refs.trend.value === 'top' || refs.trend.value === 'popular') {\n    pagination.setTotalItems(10000);\n    serverApi.setTotalResults(10000);\n  } else {\n    pagination.setTotalItems(serverApi.totalResults);\n  }\n\n\n  const currentPage = event.page;\n  serverApi.setPage(currentPage);\n  murkupGallery();\n});\n\nexport function murkupGalleryOnPageLoading(movies) {\n  serverApi.setPage(1);\n\n  const moviesMurkup = movies\n\n    .map(\n      ({ original_title, title, poster_path, id, genre_ids, release_date }) => {\n        const src = posterСheck(poster_path);\n\n        let genresMovie = null;\n        let releaseDate = null;\n\n        // проверка на жанры фильмов\n\n        const genresMovies = genresArr.reduce((acc, genre) => {\n          if (genre_ids.includes(genre.id)) {\n            acc.push(genre.name);\n          }\n          return acc;\n        }, []);\n\n        if (genresMovies.length > 3) {\n          genresMovie = genresMovies.slice(0, 2);\n          genresMovie.splice(2, 1, 'Other');\n        } else if (genresMovies.length === 0) {\n          genresMovie = [`Genres not found`];\n        } else {\n          genresMovie = genresMovies;\n        }\n\n        // проверка на дату релиза\n        if (!release_date) {\n          releaseDate = 'Release data no found';\n        } else {\n          releaseDate = release_date.slice(0, 4);\n        }\n\n        return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <div>\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genresMovie.join(\n          `, `\n        )} | ${releaseDate}</p></div>\n      </li>`;\n      }\n    )\n    .join(``);\n\n  if (refs.langValue.value === 'ru') {\n    return (refs.gallery.innerHTML = `<li class=\"warship\"><img src=\"${warship}\" /></li>`);\n  }\n\n  return (refs.gallery.innerHTML = moviesMurkup);\n}\n\nexport async function murkupGallery() {\n  try {\n    let movies = [];\n\n    if (refs.trend.value === 'top') {\n      movies = await serverApi.getTop();\n    } else if (refs.trend.value === 'popular') {\n      movies = await serverApi.getPopular();\n    } else {\n      movies = await serverApi.getPopularMovie();\n    }\n\n    serverApi.setTotalResults(movies.total_results);\n    murkupGalleryOnPageLoading(movies.results);\n  } catch (error) {\n    console.log(error);\n  }\n\n  spinnerStop();\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bRNsJ\")).toString();","import * as basicLightbox from 'basiclightbox';\n\nimport { serverApi } from './serverApi';\nimport { spinnerPlay, spinnerStop } from '../spinner';\nimport image from '../../images/poster-modal-plug-desktop.jpg';\n\nexport const markupCast = async id => {\n  spinnerPlay();\n  const data = await serverApi.getCasts(id);\n\n  const casts = data.slice(0, 15);\n\n  const castMarkup = casts.map(item => {\n    const poster = item.profile_path\n      ? `${serverApi.baseSrc}${item.profile_path}`\n      : image;\n    return `<li class=\"cast__item\">\n        <img src=\"${poster}\" class=\"cast__poster\"/>\n        <div class=\"cast__wrapper\">\n        <p class=\"cast__name\">Name: <span>${item.name}</span></p>\n        <p class=\"cast__popularity\">Popularity: <span>${Number.parseInt(\n          item.popularity\n        )}</span></p>\n        <p class=\"cast__character\">Cast: <span>${item.character}</span></p>\n        </div>\n        </li>`;\n  });\n\n  const instance = basicLightbox.create(`\n<div class=\"cast__container\">\n<ul class=\"cast__list\">${castMarkup.join('')}</ul>\n</div>\n`);\n\n  instance.show();\n  spinnerStop();\n};\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4bOEk\")).toString();","import 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { murkupGallery } from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { closeModal, onOpenModal } from './modal';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\nimport { handleClick } from './treiler';\nimport { spinnerPlay, spinnerStop } from './spinner';\nimport { markupCast } from './utilitiesJS/markupCast';\n\nmurkupGallery();\n\nrefs.gallery.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n\n  spinnerPlay();\n\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n\n  spinnerStop();\n\n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  const trailerBtn = document.querySelector('.btn-ytb');\n  const iconTrailerBtn = document.querySelector('.icon-youtube');\n  const castBtn = document.querySelector('[data-cast]');\n\n  serverApi.getTrailer(id).then(({ results }) => {\n    if (results.length !== 0) {\n      iconTrailerBtn.classList.add('icon-youtube__enable');\n      iconTrailerBtn.classList.remove('icon-youtube__disabled');\n    } else {\n      iconTrailerBtn.classList.remove('icon-youtube__enable');\n      iconTrailerBtn.classList.add('icon-youtube__disabled');\n      trailerBtn.setAttribute('disabled', true);\n      Notiflix.Notify.failure('Oh! Unfortunately there is no trailer', {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      });\n    }\n  });\n\n  watchBtn.addEventListener('click', () => onAddWatchClick(detailsMovie));\n  queueBtn.addEventListener('click', () => onAddQueueClick(detailsMovie));\n  trailerBtn.addEventListener('click', handleClick);\n  castBtn.addEventListener('click', () => markupCast(id));\n\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","import Notiflix from 'notiflix';\nimport Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { options } from './pagination';\nimport {\n  murkupGalleryOnPageLoading,\n  murkupGallery,\n} from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\nlet searchQuery = ' ';\nrefs.formRef.addEventListener('submit', onSubmitClick);\n\nasync function onSubmitClick(event) {\n  event.preventDefault();\n\n  spinnerPlay();\n\n  const inputRef = document.querySelector('.header__form-input');\n  inputRef.addEventListener('change', () => {\n    serverApi.setPage(1);\n    serverApi.setRequestCount();\n  });\n\n  searchQuery = event.currentTarget.elements.serch_film.value\n    .trim()\n    .toLowerCase();\n\n  if (!searchQuery) {\n    Notiflix.Notify.failure('Enter the name of the movie', {\n      position: 'center-top',\n      fontFamily: 'inherit',\n      borderRadius: '25px',\n      clickToClose: true,\n    });\n    spinnerStop();\n    return;\n  }\n\n  await murkupSearchMovie();\n\n  spinnerStop();\n\n  const pagination = new Pagination(refs.tuiContainer, options);\n\n  pagination.on('beforeMove', event => {\n    const currentPage = event.page;\n    serverApi.setPage(currentPage);\n    serverApi.incrementRequestCount();\n    murkupSearchMovie();\n  });\n}\n\nexport async function murkupSearchMovie() {\n  const data = await serverApi.getMovieOnDemand(searchQuery);\n  const movies = data.results;\n  const total_results = data.total_results;\n  options.totalItems = total_results;\n\n  if (total_results < 20 && total_results !== 0) {\n    refs.tuiContainer.classList.add('visually-hidden');\n  } else {\n    refs.tuiContainer.classList.remove('visually-hidden');\n  }\n\n  if (movies.length === 0) {\n    murkupGallery();\n    Notiflix.Notify.failure(\n      'Search result not successful. Enter the correct movie name and',\n      {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n    searchQuery = ' ';\n    history.goBack();\n    return;\n  }\n\n  murkupGalleryOnPageLoading(movies);\n}\n"],"names":["parcelRequire","register","JSON","parse","$185lj","refs","langValue","addEventListener","evt","language","target","value","serverApi","setlang","localStorage","setItem","stringify","location","reload","getItem","parsedData","$3fz09","trend","setTrend","$fb9GJ","$961ac6ba8a9b0f3e$exports","URL","resolve","import","meta","url","toString","$47cbafa11ce31a61$var$pagination","$parcel$interopDefault","tuiContainer","$2nhTy","options","$47cbafa11ce31a61$export$ce0b9808aa57ae7d","movies","setPage","moviesMurkup","map","original_title","title","poster_path","id","genre_ids","release_date","src","$1fedI","genresMovie","releaseDate","genresMovies","$bRnc2","genresArr","reduce","acc","genre","includes","push","name","length","slice","splice","join","gallery","innerHTML","async","$47cbafa11ce31a61$export$6bb355015a1580b","getTop","getPopular","getPopularMovie","setTotalResults","total_results","results","error","console","log","$04jNI","spinnerStop","spinnerPlay","on","event","setTotalItems","totalResults","currentPage","page","$9B8F0","$32d947a3d7917df4$exports","$4c5b5833d2282bcc$export$176f307792288ff6","castMarkup","getCasts","item","profile_path","baseSrc","Number","parseInt","popularity","character","create","show","e","parentElement","className","$bTcpz","onOpenModal","dataset","detailsMovie","getDetailsMovie","movieMurkup","$it60l","movieDescriptionMurkup","movieDescription","insertAdjacentHTML","$lFT8c","makeWatchTextContent","makeQueueTextContent","watchBtn","document","querySelector","queueBtn","closeModalBtn","trailerBtn","iconTrailerBtn","castBtn","getTrailer","then","classList","add","remove","setAttribute","$eWCmQ","Notify","failure","position","fontFamily","borderRadius","clickToClose","$9Co7P","onAddWatchClick","onAddQueueClick","$c8VpK","handleClick","closeModal","$307187451cbc0239$var$searchQuery","$307187451cbc0239$export$80a6146058001a40","data","getMovieOnDemand","totalItems","history","goBack","formRef","event1","preventDefault","setRequestCount","currentTarget","elements","serch_film","trim","toLowerCase","incrementRequestCount"],"version":3,"file":"index.8358b049.js.map"}