{"mappings":"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","sources":["src/index.js","src/js/utilitiesJS/selectLang.js","src/js/utilitiesJS/murkupGalleryOnPageLoading.js","src/js/gallery.js","src/js/onSearchForm.js"],"sourcesContent":["import './js/modal';\nimport './js/utilitiesJS/selectLang';\nimport './js/gallery';\nimport './js/onSearchForm';\nimport './js/pagination';\nimport './js/modal-team';\nimport './js/theme-dark';\nimport './js/treiler';\nimport './js/scrollTop';\nimport './js/modal-login';\nimport './js/spinner';\n","import { serverApi } from './serverApi';\n\nconst select = document.querySelector('.select__lang');\n\nselect.addEventListener('change', onSelectChange);\n\nif (localStorage.getItem('language')) {\n  const parsedData = JSON.parse(localStorage.getItem('language'));\n  select.value = parsedData;\n  serverApi.setlang(parsedData);\n}\n\nfunction onSelectChange(evt) {\n  const language = evt.target.value;\n\n  serverApi.setlang(language);\n\n  localStorage.setItem('language', JSON.stringify(language));\n\n  location.reload();\n}\n","import Pagination from 'tui-pagination';\n\nimport { refs } from './refs';\nimport { serverApi } from './serverApi';\nimport { posterСheck } from './posterCheck';\nimport { options } from '../pagination';\nimport { genresArr, genresUK } from './genres';\nimport { spinnerPlay, spinnerStop } from '../spinner';\n\n\nconst container = document.querySelector('.tui-pagination');\n\nconst pagination = new Pagination(container, options);\n\nspinnerPlay();\n\npagination.on('beforeMove', async event => {\n\nspinnerPlay();\n\n  pagination.setTotalItems(serverApi.totalResults);\n  const currentPage = event.page;\n  serverApi.setPage(currentPage);\n  murkupGallery();\n});\n\nexport function murkupGalleryOnPageLoading(movies) {\n  const moviesMurkup = movies\n\n    .map(\n      ({ original_title, title, poster_path, id, genre_ids, release_date }) => {\n        const src = posterСheck(poster_path);\n\n        let genresMovie = null;\n        let releaseDate = null;\n\n        // проверка на жанры фильмов\n\n        const genresMovies = genresArr.reduce((acc, genre) => {\n          if (genre_ids.includes(genre.id)) {\n            acc.push(genre.name);\n          }\n          return acc;\n        }, []);\n\n        if (genresMovies.length > 3) {\n          genresMovie = genresMovies.slice(0, 2);\n          genresMovie.splice(2, 1, 'Other');\n        } else if (genresMovies.length === 0) {\n          genresMovie = [`Genres not found`];\n        } else {\n          genresMovie = genresMovies;\n        }\n\n        // проверка на дату релиза\n        if (release_date === '') {\n          releaseDate = 'Release data no found';\n        } else {\n          releaseDate = release_date.slice(0, 4);\n        }\n\n        return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" loading=\"lazy\" width=\"368\" height=\"591\"/>\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genresMovie.join(`, `)} | ${releaseDate}</p>\n      </li>`;\n      }\n    )\n    .join(``);\n\n  return (refs.gallery.innerHTML = moviesMurkup);\n}\n\nexport async function murkupGallery() {\n  const movies = await serverApi.getPopularMovie();\n\n  const total_results = movies.total_results;\n  serverApi.setTotalResults(total_results);\n\n  murkupGalleryOnPageLoading(movies.results);\n\n  spinnerStop();\n}\n","import 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { murkupGallery } from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { closeModal, onOpenModal } from './modal';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\nimport { handleClick } from './treiler';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\n\nmurkupGallery();\n\nrefs.gallery.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n\n  spinnerPlay();\n\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n\n  spinnerStop();\n  \n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  const trailerBtn = document.querySelector('.btn-ytb');\n\n  watchBtn.addEventListener('click', () => onAddWatchClick(detailsMovie));\n  queueBtn.addEventListener('click', () => onAddQueueClick(detailsMovie));\n  trailerBtn.addEventListener('click', handleClick);\n\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","import Notiflix from 'notiflix';\nimport Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { options } from './pagination';\nimport { murkupGalleryOnPageLoading } from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\n\nlet searchQuery = ' ';\nrefs.formRef.addEventListener('submit', onSubmitClick);\n\nasync function onSubmitClick(event) {\n  event.preventDefault();\n\n  spinnerPlay();\n\n  const inputRef = document.querySelector('.header__form-input');\n  inputRef.addEventListener('change', () => {\n    serverApi.setPage(1);\n    serverApi.setRequestCount();\n  });\n\n  searchQuery = event.currentTarget.elements.serch_film.value\n    .trim()\n    .toLowerCase();\n\n  if (!searchQuery) {\n    Notiflix.Notify.failure('Enter the name of the movie', {\n      position: 'center-top',\n      fontFamily: 'inherit',\n      borderRadius: '25px',\n      clickToClose: true,\n    });\n    return;\n  }\n\n  await murkupSearchMovie();\n  \n  spinnerStop();\n\n  const container = document.querySelector('.tui-pagination');\n\n  const pagination = new Pagination(container, options);\n\n  pagination.on('beforeMove', event => {\n    const currentPage = event.page;\n    serverApi.setPage(currentPage);\n    serverApi.incrementRequestCount();\n    murkupSearchMovie();\n  });\n}\n\nexport async function murkupSearchMovie() {\n  const data = await serverApi.getMovieOnDemand(searchQuery);\n  const movies = data.results;\n  const total_results = data.total_results;\n  options.totalItems = total_results;\n\n  if (total_results < 20) {\n    const item = document.querySelector('.tui-js');\n    item.classList.add('visually-hidden');\n  } else {\n    const item = document.querySelector('.tui-js');\n    item.classList.remove('visually-hidden');\n  }\n\n  if (movies.length === 0) {\n    Notiflix.Notify.failure(\n      'Search result not successful. Enter the correct movie name and',\n      {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n    searchQuery = ' ';\n    return;\n  }\n\n  murkupGalleryOnPageLoading(movies);\n}\n"],"names":["parcelRequire","$185lj","$c82ff429295355a1$var$select","document","querySelector","addEventListener","evt","language","target","value","serverApi","setlang","localStorage","setItem","JSON","stringify","location","reload","getItem","parsedData","parse","$fb9GJ","$47cbafa11ce31a61$var$container","$47cbafa11ce31a61$var$pagination","$parcel$interopDefault","$2nhTy","options","$47cbafa11ce31a61$export$ce0b9808aa57ae7d","movies","moviesMurkup","map","original_title","title","poster_path","id","genre_ids","release_date","src","$1fedI","genresMovie","releaseDate","genresMovies","$bRnc2","genresArr","reduce","acc","genre","includes","push","name","length","slice","splice","join","$3fz09","refs","gallery","innerHTML","async","$47cbafa11ce31a61$export$6bb355015a1580b","getPopularMovie","total_results","setTotalResults","results","$04jNI","spinnerStop","spinnerPlay","on","event","setTotalItems","totalResults","currentPage","page","setPage","e","parentElement","className","$bTcpz","onOpenModal","dataset","detailsMovie","getDetailsMovie","movieMurkup","$it60l","movieDescriptionMurkup","movieDescription","insertAdjacentHTML","$lFT8c","makeWatchTextContent","makeQueueTextContent","watchBtn","queueBtn","closeModalBtn","trailerBtn","$9Co7P","onAddWatchClick","onAddQueueClick","$c8VpK","handleClick","closeModal","$eWCmQ","$307187451cbc0239$var$searchQuery","$307187451cbc0239$export$80a6146058001a40","data","getMovieOnDemand","totalItems","classList","add","remove","Notify","failure","position","fontFamily","borderRadius","clickToClose","formRef","event1","preventDefault","setRequestCount","currentTarget","elements","serch_film","trim","toLowerCase","container","incrementRequestCount"],"version":3,"file":"index.a9451229.js.map"}