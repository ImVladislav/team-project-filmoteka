{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-7059078ce1285a9d.js","src/index.js","src/js/utilitiesJS/selectLang.js","src/js/utilitiesJS/selectTrend.js","src/js/gallery.js","src/js/utilitiesJS/murkupGalleryOnPageLoading.js","node_modules/@parcel/runtime-js/lib/runtime-daf493b7efc72280.js","src/js/onSearchForm.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.c0154bb7.js\\\",\\\"hZmkp\\\":\\\"warship.6c844eb5.jpg\\\",\\\"5UbS1\\\":\\\"index.ddd103ef.css\\\",\\\"5ZwWc\\\":\\\"index.a317a0d0.js\\\"}\"));","import './js/modal';\nimport './js/utilitiesJS/selectLang';\nimport './js/utilitiesJS/selectTrend';\nimport './js/gallery';\nimport './js/onSearchForm';\nimport './js/pagination';\nimport './js/modal-team';\nimport './js/theme-dark';\nimport './js/treiler';\nimport './js/scrollTop';\nimport './js/modal-login';\nimport './js/spinner';\nimport './js/firebase';\n","import { serverApi } from './serverApi';\nimport { refs } from './refs';\n\nrefs.langValue.addEventListener('change', onSelectChange);\n\nif (localStorage.getItem('language')) {\n  const parsedData = JSON.parse(localStorage.getItem('language'));\n  refs.langValue.value = parsedData;\n  serverApi.setlang(parsedData);\n}\n\nfunction onSelectChange(evt) {\n  const language = evt.target.value;\n\n  serverApi.setlang(language);\n\n  localStorage.setItem('language', JSON.stringify(language));\n\n  location.reload();\n}\n","import { serverApi } from './serverApi';\nimport { refs } from './refs';\n\nrefs.trend.addEventListener('change', onSelectChange);\n\nif (localStorage.getItem('selected-trend')) {\n  const parsedData = JSON.parse(localStorage.getItem('selected-trend'));\n  refs.trend.value = parsedData;\n  serverApi.setTrend(parsedData);\n}\n\nfunction onSelectChange(evt) {\n  const trend = evt.target.value;\n\n  serverApi.setTrend(trend);\n\n  localStorage.setItem('selected-trend', JSON.stringify(trend));\n\n  location.reload();\n}\n","import 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { murkupGallery } from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { closeModal, onOpenModal } from './modal';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\nimport { handleClick } from './treiler';\nimport { spinnerPlay, spinnerStop } from './spinner';\nimport { markupCast } from './utilitiesJS/markupCast';\n\nmurkupGallery();\n\nrefs.gallery.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n\n  spinnerPlay();\n\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n\n  spinnerStop();\n\n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  const trailerBtn = document.querySelector('.btn-ytb');\n  const iconTrailerBtn = document.querySelector('.icon-youtube');\n  const castBtn = document.querySelector('[data-cast]');\n\n  serverApi.getTrailer(id).then(({ results }) => {\n    if (results.length !== 0) {\n      iconTrailerBtn.classList.add('icon-youtube__enable');\n      iconTrailerBtn.classList.remove('icon-youtube__disabled');\n    } else {\n      iconTrailerBtn.classList.remove('icon-youtube__enable');\n      iconTrailerBtn.classList.add('icon-youtube__disabled');\n      trailerBtn.setAttribute('disabled', true);\n      Notiflix.Notify.failure('Oh! Unfortunately there is no trailer', {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      });\n    }\n  });\n\n  watchBtn.addEventListener('click', () => onAddWatchClick(detailsMovie));\n  queueBtn.addEventListener('click', () => onAddQueueClick(detailsMovie));\n  trailerBtn.addEventListener('click', handleClick);\n  castBtn.addEventListener('click', () => markupCast(id));\n\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","import Pagination from 'tui-pagination';\n\nimport { refs } from './refs';\nimport { serverApi } from './serverApi';\nimport { posterСheck } from './posterCheck';\nimport { options } from '../pagination';\nimport { spinnerPlay, spinnerStop } from '../spinner';\nimport { genresArr, genresUK } from './genres';\nimport { spinnerPlay, spinnerStop } from '../spinner';\nimport warship from '../../images/warship.jpg';\n\nconst pagination = new Pagination(refs.tuiContainer, options);\n\nspinnerPlay(); // ! не пересовувати\n\npagination.on('beforeMove', async event => {\n  spinnerPlay();\n  pagination.setTotalItems(serverApi.totalResults);\n\n  if (refs.trend.value === 'top' || refs.trend.value === 'popular') {\n    pagination.setTotalItems(10000);\n    serverApi.setTotalResults(10000);\n  } else {\n    pagination.setTotalItems(serverApi.totalResults);\n  }\n\n  const currentPage = event.page;\n  serverApi.setPage(currentPage);\n  murkupGallery();\n});\n\nexport function murkupGalleryOnPageLoading(movies) {\n  serverApi.setPage(1);\n\n  const moviesMurkup = movies\n\n    .map(\n      ({ original_title, title, poster_path, id, genre_ids, release_date }) => {\n        const src = posterСheck(poster_path);\n\n        let genresMovie = null;\n        let releaseDate = null;\n        let genresMovies = null;\n\n        // проверка на жанры фильмов\n\n        if (refs.langValue.value === 'ru') {\n          return (refs.gallery.innerHTML = `<li class=\"warship\"><img src=\"${warship}\" /></li>`);\n        }\n\n        if (refs.langValue.value === 'en-US') {\n          genresMovies = genresArr.reduce((acc, genre) => {\n            if (genre_ids.includes(genre.id)) {\n              acc.push(genre.name);\n            }\n            return acc;\n          }, []);\n\n          if (genresMovies.length > 3) {\n            genresMovie = genresMovies.slice(0, 2);\n            genresMovie.splice(2, 1, 'Other');\n          } else if (genresMovies.length === 0) {\n            genresMovie = [`Genres not found`];\n          } else {\n            genresMovie = genresMovies;\n          }\n\n          if (!release_date) {\n            releaseDate = 'Release data no found';\n          } else {\n            releaseDate = release_date.slice(0, 4);\n          }\n        } else if (refs.langValue.value === 'uk') {\n          genresMovies = genresUK.reduce((acc, genre) => {\n            if (genre_ids.includes(genre.id)) {\n              acc.push(genre.name);\n            }\n            return acc;\n          }, []);\n\n          if (genresMovies.length > 3) {\n            genresMovie = genresMovies.slice(0, 2);\n            genresMovie.splice(2, 1, 'Інше');\n          } else if (genresMovies.length === 0) {\n            genresMovie = [`Жанрів не знайдено`];\n          } else {\n            genresMovie = genresMovies;\n          }\n\n          if (!release_date) {\n            releaseDate = 'Дату релізу не знайдено';\n          } else {\n            releaseDate = release_date.slice(0, 4);\n          }\n        }\n\n        return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <div>\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genresMovie.join(\n          `, `\n        )} | ${releaseDate}</p></div>\n      </li>`;\n      }\n    )\n    .join(``);\n\n  return (refs.gallery.innerHTML = moviesMurkup);\n}\n\nexport async function murkupGallery() {\n  try {\n    let movies = [];\n\n    if (refs.trend.value === 'top') {\n      movies = await serverApi.getTop();\n    } else if (refs.trend.value === 'popular') {\n      movies = await serverApi.getPopular();\n    } else {\n      movies = await serverApi.getPopularMovie();\n    }\n\n    serverApi.setTotalResults(movies.total_results);\n    murkupGalleryOnPageLoading(movies.results);\n  } catch (error) {\n    console.log(error);\n  }\n\n  spinnerStop();\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"hZmkp\");","import Notiflix from 'notiflix';\nimport Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { options } from './pagination';\nimport {\n  murkupGalleryOnPageLoading,\n  murkupGallery,\n} from './utilitiesJS/murkupGalleryOnPageLoading';\nimport { spinnerPlay, spinnerStop } from './spinner';\n\nlet searchQuery = ' ';\nrefs.formRef.addEventListener('submit', onSubmitClick);\n\nasync function onSubmitClick(event) {\n  event.preventDefault();\n\n  spinnerPlay();\n\n  const inputRef = document.querySelector('.header__form-input');\n  inputRef.addEventListener('change', () => {\n    serverApi.setPage(1);\n    serverApi.setRequestCount();\n  });\n\n  searchQuery = event.currentTarget.elements.serch_film.value\n    .trim()\n    .toLowerCase();\n\n  if (!searchQuery) {\n    Notiflix.Notify.failure('Enter the name of the movie', {\n      position: 'center-top',\n      fontFamily: 'inherit',\n      borderRadius: '25px',\n      clickToClose: true,\n    });\n    spinnerStop();\n    return;\n  }\n\n  await murkupSearchMovie();\n\n  spinnerStop();\n\n  const pagination = new Pagination(refs.tuiContainer, options);\n\n  pagination.on('beforeMove', event => {\n    const currentPage = event.page;\n    serverApi.setPage(currentPage);\n    serverApi.incrementRequestCount();\n    murkupSearchMovie();\n  });\n  \n    event.target.reset();\n}\n\nexport async function murkupSearchMovie() {\n  const data = await serverApi.getMovieOnDemand(searchQuery);\n  const movies = data.results;\n  const total_results = data.total_results;\n  options.totalItems = total_results;\n\n  if (total_results < 20 && total_results !== 0) {\n    refs.tuiContainer.classList.add('visually-hidden');\n  } else {\n    refs.tuiContainer.classList.remove('visually-hidden');\n  }\n\n  if (movies.length === 0) {\n    murkupGallery();\n    Notiflix.Notify.failure(\n      'Search result not successful. Enter the correct movie name and',\n      {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n    searchQuery = ' ';\n    history.goBack();\n    return;\n  }\n\n  murkupGalleryOnPageLoading(movies);\n}\n"],"names":["parcelRequire","register","JSON","parse","$jaaYu","refs","langValue","addEventListener","evt","language","target","value","serverApi","setlang","localStorage","setItem","stringify","location","reload","getItem","$e9bed70a02c7e5b3$var$parsedData","$hiFhO","trend","setTrend","$7b1a18f643596ea4$var$parsedData","$bpxeT","$6319642364bdf093$exports","getBundleURL","resolve","$0ced5e31662a45f8$var$pagination","$parcel$interopDefault","$1VFfL","tuiContainer","$jcFG7","options","$0ced5e31662a45f8$export$ce0b9808aa57ae7d","movies","setPage","moviesMurkup","map","param","original_title","title","poster_path","id","genre_ids","release_date","src","$9PJ7S","genresMovie","releaseDate","genresMovies","gallery","innerHTML","concat","$4zVoc","genresArr","reduce","acc","genre","includes","push","name","length","slice","splice","genresUK","join","$0ced5e31662a45f8$export$6bb355015a1580b","$0ced5e31662a45f8$var$_murkupGallery","apply","this","arguments","$2TvXO","mark","_callee","getTop","_ctx","sent","getPopular","getPopularMovie","setTotalResults","total_results","results","console","log","t0","$j1lrD","spinnerStop","spinnerPlay","on","event","currentPage","setTotalItems","totalResults","page","$6756f0db6f988caf$var$_onClickMovie","e","detailsMovie","movieMurkup","watchBtn","queueBtn","closeModalBtn","trailerBtn","iconTrailerBtn","castBtn","parentElement","className","$5xtVg","onOpenModal","dataset","getDetailsMovie","$kiFmR","movieDescriptionMurkup","movieDescription","insertAdjacentHTML","$5HOzi","makeWatchTextContent","makeQueueTextContent","document","querySelector","getTrailer","then","classList","add","remove","setAttribute","$iU1Pc","Notify","failure","position","fontFamily","borderRadius","clickToClose","$4cXS4","onAddWatchClick","onAddQueueClick","$dkUq4","handleClick","$3TKAW","markupCast","closeModal","$98475668925f8ab5$var$searchQuery","$98475668925f8ab5$var$_onSubmitClick","event1","preventDefault","setRequestCount","currentTarget","elements","serch_film","trim","toLowerCase","$98475668925f8ab5$export$80a6146058001a40","incrementRequestCount","reset","$98475668925f8ab5$var$_murkupSearchMovie","data","getMovieOnDemand","totalItems","history","goBack","formRef"],"version":3,"file":"index.c0154bb7.js.map"}