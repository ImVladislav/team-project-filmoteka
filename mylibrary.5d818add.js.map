{"mappings":"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","sources":["src/mylibrary.js","src/js/watchedMovies.js","src/js/queueMovies.js","src/js/utilitiesJS/clearPage.js"],"sourcesContent":["import './js/modal';\nimport './js/modal-team';\nimport './js/watchedMovies';\nimport './js/queueMovies';\nimport './js/pagination';\nimport './js/theme-dark';\nimport './js/scrollTop';\n\nimport './js/modal-login';\n\n","import { refs } from './utilitiesJS/refs';\nimport { poster小heck } from './utilitiesJS/posterCheck';\nimport { onOpenModal } from './modal';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { onOpenModal } from './modal';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport { closeModal, onOpenModal } from './modal';\nimport { genresArr } from './utilitiesJS/genres';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\n\nrefs.btnWathed.addEventListener('click', onBtnWatchedClick);\n\nfunction onBtnWatchedClick() {\n  try {\n    const watched = JSON.parse(localStorage.getItem('watch'));\n    if (!watched) {\n      refs.mainList.classList.add('not-films');\n      refs.containerLib.insertAdjacentHTML('beforeend', createMessage());\n      refs.btnWathed.removeEventListener('click', onBtnWatchedClick);\n      return;\n    }\n\n    murkupGalleryOnBtnWatched(watched);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction murkupGalleryOnBtnWatched(movies) {\n  const moviesMurkup = movies\n    .map(({ original_title, title, poster_path, id, genres, release_date }) => {\n      let genresMovie = null;\n      let releaseDate = null;\n\n      const genresId = genres.map(genre => genre.id);\n      const src = poster小heck(poster_path);\n\n      const genresMovies = genresArr.reduce((acc, genre) => {\n        if (genresId.includes(genre.id)) {\n          acc.push(genre.name);\n        }\n        return acc;\n      }, []);\n\n      if (genresMovies.length > 3) {\n        genresMovie = genresMovies.slice(0, 2);\n        genresMovie.splice(2, 1, 'Other');\n      } else if (genresMovies.length === 0) {\n        genresMovie = [`Genres not found`];\n      } else {\n        genresMovie = genresMovies;\n      }\n\n      if (release_date === '') {\n        releaseDate = 'Release data no found';\n      } else {\n        releaseDate = release_date.slice(0, 4);\n      }\n\n      return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genresMovie.join(`, `)} | ${releaseDate}</p>\n      </li>`;\n    })\n    .join(``);\n\n  return (refs.galleryLibrary.innerHTML = moviesMurkup);\n}\n\nrefs.galleryLibrary.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n\n  watchBtn.addEventListener('click', () => {\n    onAddWatchClick(detailsMovie);\n    const watched = JSON.parse(localStorage.getItem('watch'));\n    murkupGalleryOnBtnWatched(watched);\n  });\n  queueBtn.addEventListener('click', () => {\n    onAddQueueClick(detailsMovie);\n    const queued = JSON.parse(localStorage.getItem('queue'));\n    murkupGalleryOnBtnWatched(queued);\n  });\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","import { refs } from './utilitiesJS/refs';\nimport { poster小heck } from './utilitiesJS/posterCheck';\nimport { clearPage } from './utilitiesJS/clearPage';\nimport { genresArr } from './utilitiesJS/genres';\n\nrefs.btnQueue.addEventListener('click', onBtnQueueClick);\n\nfunction onBtnQueueClick() {\n  // clearPage();\n  try {\n    const queue = JSON.parse(localStorage.getItem('queue'));\n    if (!queue) {\n      refs.mainList.classList.add('not-films');\n      refs.containerLib.insertAdjacentHTML('beforeend', createMessage());\n      refs.btnQueue.removeEventListener('click', onBtnQueueClick);\n      return;\n    }\n\n    murkupGalleryOnBtnQueued(queue);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction murkupGalleryOnBtnQueued(movies) {\n  const moviesMurkup = movies\n    .map(({ original_title, title, poster_path, id, genres, release_date }) => {\n      let genresMovie = null;\n      let releaseDate = null;\n\n      const genresId = genres.map(genre => genre.id);\n      const src = poster小heck(poster_path);\n\n      const genresMovies = genresArr.reduce((acc, genre) => {\n        if (genresId.includes(genre.id)) {\n          acc.push(genre.name);\n        }\n        return acc;\n      }, []);\n\n      if (genresMovies.length > 3) {\n        genresMovie = genresMovies.slice(0, 2);\n        genresMovie.splice(2, 1, 'Other');\n      } else if (genresMovies.length === 0) {\n        genresMovie = [`Genres not found`];\n      } else {\n        genresMovie = genresMovies;\n      }\n\n      if (release_date === '') {\n        releaseDate = 'Release data no found';\n      } else {\n        releaseDate = release_date.slice(0, 4);\n      }\n\n      return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genresMovie.join(`, `)} | ${releaseDate}</p>\n      </li>`;\n    })\n    .join(``);\n\n  return (refs.galleryLibrary.innerHTML = moviesMurkup);\n}\n","import { refs } from './refs';\n\nexport function clearPage() {\n  refs.gallery.innerHTML = '';\n}\n"],"names":["parcelRequire","$3fz09","$c5c7efe92cb3f8dd$var$murkupGalleryOnBtnWatched","movies","moviesMurkup","map","original_title","title","poster_path","id","genres","release_date","genresMovie","releaseDate","genresId","genre","src","$1fedI","genresMovies","$bRnc2","genresArr","reduce","acc","includes","push","name","length","slice","splice","join","refs","galleryLibrary","innerHTML","btnWathed","addEventListener","$c5c7efe92cb3f8dd$var$onBtnWatchedClick","watched","JSON","parse","localStorage","getItem","mainList","classList","add","containerLib","insertAdjacentHTML","createMessage","removeEventListener","error","console","log","message","async","e","target","parentElement","className","$bTcpz","onOpenModal","dataset","detailsMovie","$185lj","serverApi","getDetailsMovie","movieMurkup","$it60l","movieDescriptionMurkup","movieDescription","$lFT8c","makeWatchTextContent","makeQueueTextContent","watchBtn","document","querySelector","queueBtn","closeModalBtn","$9Co7P","onAddWatchClick","onAddQueueClick","closeModal","btnQueue","$9635c521914b1c37$var$onBtnQueueClick","queue","$9635c521914b1c37$var$murkupGalleryOnBtnQueued"],"version":3,"file":"mylibrary.5d818add.js.map"}