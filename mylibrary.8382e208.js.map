{"mappings":"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","sources":["src/mylibrary.js","src/js/watchedMovies.js","src/js/utilitiesJS/createEmptyLibMessage.js","src/js/queueMovies.js","src/js/utilitiesJS/clearPage.js"],"sourcesContent":["import './js/modal';\nimport './js/modal-team';\nimport './js/watchedMovies';\nimport './js/queueMovies';\nimport './js/pagination';\nimport './js/theme-dark';\nimport './js/scrollTop';\n\nimport './js/modal-login';\nimport './js/firebase';\n","import Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { posterСheck } from './utilitiesJS/posterCheck';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport { closeModal, onOpenModal } from './modal';\nimport { options } from './pagination';\nimport { genresArr } from './utilitiesJS/genres';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\nimport { handleClick } from './treiler';\n\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\n\nimport { handleClick } from './treiler';\n\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\n\n\nrefs.btnWathed.addEventListener('click', onBtnWatchedClick);\n\nfunction onBtnWatchedClick() {\n  try {\n    const watched = JSON.parse(localStorage.getItem('watch'));\n\n    options.totalItems = watched.length;\n    let start = 0;\n    let end = 20;\n\n    const handleSlice = currentPage => {\n      start = currentPage * options.itemsPerPage - 20;\n      end = currentPage * options.itemsPerPage;\n    };\n\n    if (!watched.length) {\n      refs.containerLib.insertAdjacentHTML('beforeend', createMessage());\n      refs.btnWathed.removeEventListener('click', onBtnWatchedClick);\n      refs.tuiContainer.classList.add('visually-hidden');\n      return;\n    } else {\n      refs.tuiContainer.classList.remove('visually-hidden');\n    }\n    murkupGalleryOnBtnWatched(watched.slice(start, end));\n\n    const pagination = new Pagination(refs.tuiContainer, options);\n\n    pagination.on('beforeMove', event => {\n      const currentPage = event.page;\n      handleSlice(currentPage);\n      murkupGalleryOnBtnWatched(watched.slice(start, end));\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction murkupGalleryOnBtnWatched(movies) {\n  const moviesMurkup = movies\n    .map(({ original_title, title, poster_path, id, genres, release_date }) => {\n      let genresMovie = null;\n      let releaseDate = null;\n\n      const genresId = genres.map(genre => genre.id);\n      const src = posterСheck(poster_path);\n\n      const genresMovies = genresArr.reduce((acc, genre) => {\n        if (genresId.includes(genre.id)) {\n          acc.push(genre.name);\n        }\n        return acc;\n      }, []);\n\n      if (genresMovies.length > 3) {\n        genresMovie = genresMovies.slice(0, 2);\n        genresMovie.splice(2, 1, 'Other');\n      } else if (genresMovies.length === 0) {\n        genresMovie = [`Genres not found`];\n      } else {\n        genresMovie = genresMovies;\n      }\n\n      if (release_date === '') {\n        releaseDate = 'Release data no found';\n      } else {\n        releaseDate = release_date.slice(0, 4);\n      }\n\n      return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genresMovie.join(`, `)} | ${releaseDate}</p>\n      </li>`;\n    })\n    .join(``);\n\n  return (refs.galleryLibrary.innerHTML = moviesMurkup);\n}\n\nrefs.galleryLibrary.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  const trailerBtn = document.querySelector('.btn-ytb');\n\n  watchBtn.addEventListener('click', () => {\n    onAddWatchClick(detailsMovie);\n    const watched = JSON.parse(localStorage.getItem('watch'));\n    murkupGalleryOnBtnWatched(watched);\n  });\n  queueBtn.addEventListener('click', () => {\n    onAddQueueClick(detailsMovie);\n    const queued = JSON.parse(localStorage.getItem('queue'));\n    murkupGalleryOnBtnWatched(queued);\n  });\n  trailerBtn.addEventListener('click', handleClick);\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","export function createMessage() {\n  const messageMarkup = `<div class=\"message-wrap\">\n      <p class=\"sorry\">Sorry...</p>\n      <p class=\"message\">\n        You haven't added any movies yet. Hope you fix this soon :)\n      </p>\n      <a href=\"/src/index.html\" class=\"library__button accent\">Filmoteka</a>\n    </div>`;\n  return messageMarkup;\n}\n","import Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { posterСheck } from './utilitiesJS/posterCheck';\nimport { clearPage } from './utilitiesJS/clearPage';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { options } from './pagination';\nimport { genresArr } from './utilitiesJS/genres';\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\n\nrefs.btnQueue.addEventListener('click', onBtnQueueClick);\n\nfunction onBtnQueueClick() {\n  try {\n    const queue = JSON.parse(localStorage.getItem('queue'));\n\n    options.totalItems = queue.length;\n    let start = 0;\n    let end = 20;\n\n    const handleSlice = currentPage => {\n      start = currentPage * options.itemsPerPage - 20;\n      end = currentPage * options.itemsPerPage;\n    };\n\n    if (!queue.length) {\n      refs.containerLib.insertAdjacentHTML('beforeend', createMessage());\n      refs.btnQueue.removeEventListener('click', onBtnQueueClick);\n      refs.tuiContainer.classList.add('visually-hidden');\n      return;\n    } else {\n      refs.tuiContainer.classList.remove('visually-hidden');\n    }\n    murkupGalleryOnBtnQueued(queue.slice(start, end));\n\n    const pagination = new Pagination(refs.tuiContainer, options);\n\n    pagination.on('beforeMove', event => {\n      const currentPage = event.page;\n      handleSlice(currentPage);\n      murkupGalleryOnBtnQueued(queue.slice(start, end));\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction murkupGalleryOnBtnQueued(movies) {\n  const moviesMurkup = movies\n    .map(({ original_title, title, poster_path, id, genres, release_date }) => {\n      let genresMovie = null;\n      let releaseDate = null;\n\n      const genresId = genres.map(genre => genre.id);\n      const src = posterСheck(poster_path);\n\n      const genresMovies = genresArr.reduce((acc, genre) => {\n        if (genresId.includes(genre.id)) {\n          acc.push(genre.name);\n        }\n        return acc;\n      }, []);\n\n      if (genresMovies.length > 3) {\n        genresMovie = genresMovies.slice(0, 2);\n        genresMovie.splice(2, 1, 'Other');\n      } else if (genresMovies.length === 0) {\n        genresMovie = [`Genres not found`];\n      } else {\n        genresMovie = genresMovies;\n      }\n\n      if (release_date === '') {\n        releaseDate = 'Release data no found';\n      } else {\n        releaseDate = release_date.slice(0, 4);\n      }\n\n      return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genresMovie.join(`, `)} | ${releaseDate}</p>\n      </li>`;\n    })\n    .join(``);\n\n  return (refs.galleryLibrary.innerHTML = moviesMurkup);\n}\n","import { refs } from './refs';\n\nexport function clearPage() {\n  refs.gallery.innerHTML = '';\n}\n"],"names":["parcelRequire","$fb9GJ","$c5c7efe92cb3f8dd$var$murkupGalleryOnBtnWatched","movies","moviesMurkup","map","original_title","title","poster_path","id","genres","release_date","genresMovie","releaseDate","genresId","genre","src","$1fedI","genresMovies","$bRnc2","genresArr","reduce","acc","includes","push","name","length","slice","splice","join","$3fz09","refs","galleryLibrary","innerHTML","btnWathed","addEventListener","$c5c7efe92cb3f8dd$var$onBtnWatchedClick","watched","JSON","parse","localStorage","getItem","$2nhTy","options","totalItems","start","end","handleSlice","currentPage","itemsPerPage","containerLib","insertAdjacentHTML","removeEventListener","tuiContainer","classList","add","remove","$parcel$interopDefault","on","event","page","error","console","log","message","async","e","target","parentElement","className","$bTcpz","onOpenModal","dataset","detailsMovie","$185lj","serverApi","getDetailsMovie","movieMurkup","$it60l","movieDescriptionMurkup","movieDescription","$lFT8c","makeWatchTextContent","makeQueueTextContent","watchBtn","document","querySelector","queueBtn","closeModalBtn","trailerBtn","$9Co7P","onAddWatchClick","onAddQueueClick","$c8VpK","handleClick","closeModal","$9635c521914b1c37$var$murkupGalleryOnBtnQueued","btnQueue","$9635c521914b1c37$var$onBtnQueueClick","queue"],"version":3,"file":"mylibrary.8382e208.js.map"}