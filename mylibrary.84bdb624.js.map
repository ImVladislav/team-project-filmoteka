{"mappings":"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","sources":["src/js/onLibraryClick.js","src/js/watchedMovies.js","src/js/utilitiesJS/markupGllery.js","src/js/utilitiesJS/createEmptyLibMessage.js","src/js/queueMovies.js"],"sourcesContent":["import { refs } from './utilitiesJS/refs';\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\nimport { onBtnWatchedClick } from './watchedMovies';\nimport { onBtnQueueClick } from './queueMovies';\nimport { serverApi } from './utilitiesJS/serverApi';\n\nonMyLibraryClick();\n\nfunction onMyLibraryClick() {\n  serverApi.setlang(JSON.parse(localStorage.getItem('language')));\n\n  try {\n    const watch = JSON.parse(localStorage.getItem('watch'));\n    const queue = JSON.parse(localStorage.getItem('queue'));\n\n    if (!watch && !queue) {\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', createMessage());\n      return;\n    }\n    if (watch && watch.length !== 0) {\n      onBtnWatchedClick();\n      return;\n    } else if ((queue && queue.length !== 0 && !watch) || watch.length === 0) {\n      onBtnQueueClick();\n      return;\n    } else {\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', createMessage());\n      return;\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import Pagination from 'tui-pagination';\nimport Notiflix from 'notiflix';\nimport { refs } from './utilitiesJS/refs';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport { closeModal, onOpenModal } from './modal';\nimport { options } from './pagination';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\nimport { handleClick } from './treiler';\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\nimport { murkupGallery } from './utilitiesJS/markupGllery';\n\nrefs.btnWathed.addEventListener('click', onBtnWatchedClick);\n\nexport function onBtnWatchedClick() {\n  refs.btnWathed.dataset.watch = 'active';\n  refs.btnQueue.dataset.queue = '';\n\n  try {\n    const watched = JSON.parse(localStorage.getItem('watch'));\n\n    if (!watched || watched.length === 0) {\n      refs.galleryLibrary.innerHTML = createMessage();\n      refs.tuiContainer.classList.add('visually-hidden');\n      return;\n    } else {\n      options.totalItems = watched.length;\n      let start = 0;\n      let end = 20;\n\n      const handleSlice = currentPage => {\n        start = currentPage * options.itemsPerPage - 20;\n        end = currentPage * options.itemsPerPage;\n      };\n\n      refs.tuiContainer.classList.remove('visually-hidden');\n      murkupGallery(watched.slice(start, end));\n      const pagination = new Pagination(refs.tuiContainer, options);\n\n      pagination.on('beforeMove', event => {\n        const currentPage = event.page;\n        handleSlice(currentPage);\n        murkupGallery(watched.slice(start, end));\n      });\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nrefs.galleryLibrary.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n\n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  const trailerBtn = document.querySelector('.btn-ytb');\n  const iconTrailerBtn = document.querySelector('.icon-youtube');\n\n  watchBtn.addEventListener('click', () => {\n    onAddWatchClick(detailsMovie);\n    const watched = JSON.parse(localStorage.getItem('watch'));\n\n    if (refs.btnWathed.dataset.watch === 'active') {\n      murkupGallery(watched);\n    }\n  });\n\n  queueBtn.addEventListener('click', () => {\n    onAddQueueClick(detailsMovie);\n    const queued = JSON.parse(localStorage.getItem('queue'));\n\n    if (refs.btnQueue.dataset.queue === 'active') {\n      murkupGallery(queued);\n    }\n  });\n\n  serverApi.getTrailer(id).then(({ results }) => {\n    if (results.length !== 0) {\n      iconTrailerBtn.classList.add('icon-youtube__enable');\n      iconTrailerBtn.classList.remove('icon-youtube__disabled');\n    } else {\n      iconTrailerBtn.classList.remove('icon-youtube__enable');\n      iconTrailerBtn.classList.add('icon-youtube__disabled');\n      trailerBtn.setAttribute('disabled', true);\n      Notiflix.Notify.failure('Oh! Unfortunately there is no trailer', {\n        position: 'center-top',\n        fontFamily: 'inherit',\n        borderRadius: '25px',\n        clickToClose: true,\n      });\n    }\n  });\n\n  trailerBtn.addEventListener('click', handleClick);\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","import { refs } from './refs';\nimport { posterСheck } from './posterCheck';\nimport { genresArr } from './genres';\nimport { createMessage } from './createEmptyLibMessage';\n\nexport function murkupGallery(movies) {\n  if (!movies.length) {\n    refs.tuiContainer.classList.add('visually-hidden');\n  }\n\n  const moviesMurkup = movies\n    .map(({ original_title, title, poster_path, id, genres, release_date }) => {\n      let genresMovie = null;\n      let releaseDate = null;\n\n      const genresId = genres.map(genre => genre.id);\n      const src = posterСheck(poster_path);\n\n      const genresMovies = genresArr.reduce((acc, genre) => {\n        if (genresId.includes(genre.id)) {\n          acc.push(genre.name);\n        }\n        return acc;\n      }, []);\n\n      if (genresMovies.length > 3) {\n        genresMovie = genresMovies.slice(0, 2);\n        genresMovie.splice(2, 1, 'Other');\n      } else if (genresMovies.length === 0) {\n        genresMovie = [`Genres not found`];\n      } else {\n        genresMovie = genresMovies;\n      }\n\n      if (release_date === '') {\n        releaseDate = 'Release data no found';\n      } else {\n        releaseDate = release_date.slice(0, 4);\n      }\n\n      return `\n          <li class=\"film__item\" data-id=\"${id}\">\n          <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n          <p class=\"film__title\">${title}</p>\n          <p class=\"film__genre\">${genresMovie.join(`, `)} | ${releaseDate}</p>\n        </li>`;\n    })\n    .join(``);\n\n  return (refs.galleryLibrary.innerHTML = moviesMurkup);\n}\n","export function createMessage() {\n  const messageMarkup = `<div class=\"message-wrap\" >\n      <p class=\"sorry\">Sorry...</p>\n      <p class=\"message\">\n        You haven't added any movies yet. Hope you fix this soon :)\n      </p>\n      <a href=\"/src/index.html\" class=\"library__button accent\">Filmoteka</a>\n    </div>`;\n  return messageMarkup;\n}\n","import Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { options } from './pagination';\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\nimport { murkupGallery } from './utilitiesJS/markupGllery';\n\nrefs.btnQueue.addEventListener('click', onBtnQueueClick);\n\nexport function onBtnQueueClick() {\n  refs.btnWathed.dataset.watch = '';\n  refs.btnQueue.dataset.queue = 'active';\n\n  try {\n    const queue = JSON.parse(localStorage.getItem('queue'));\n\n    if (!queue || queue.length === 0) {\n      refs.galleryLibrary.innerHTML = createMessage();\n      refs.tuiContainer.classList.add('visually-hidden');\n      return;\n    } else {\n      options.totalItems = queue.length;\n      let start = 0;\n      let end = 20;\n\n      const handleSlice = currentPage => {\n        start = currentPage * options.itemsPerPage - 20;\n        end = currentPage * options.itemsPerPage;\n      };\n\n      refs.tuiContainer.classList.remove('visually-hidden');\n      murkupGallery(queue.slice(start, end));\n\n      const pagination = new Pagination(refs.tuiContainer, options);\n\n      pagination.on('beforeMove', event => {\n        const currentPage = event.page;\n        handleSlice(currentPage);\n        murkupGallery(queue.slice(start, end));\n      });\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"],"names":["$hiFhO","parcelRequire","$bpxeT","$680787a72f3ad581$export$6bb355015a1580b","movies","length","refs","tuiContainer","classList","add","moviesMurkup","map","param","original_title","title","poster_path","id","genres","release_date","genresMovie","releaseDate","genresId","genre","src","$9PJ7S","genresMovies","$4zVoc","genresArr","reduce","acc","includes","push","name","slice","splice","concat","join","galleryLibrary","innerHTML","$51943685a991b61a$export$e3cd2a9e9061f2c1","btnWathed","dataset","watch","btnQueue","queue","watched","JSON","parse","localStorage","getItem","$jcFG7","options","totalItems","start","end","remove","$parcel$interopDefault","$1VFfL","on","event","currentPage","itemsPerPage","handleSlice","page","error","console","log","message","$51943685a991b61a$var$_onClickMovie","$2TvXO","mark","_callee","e","detailsMovie","movieMurkup","watchBtn","queueBtn","closeModalBtn","trailerBtn","iconTrailerBtn","target","parentElement","className","$5xtVg","onOpenModal","$jaaYu","serverApi","getDetailsMovie","_ctx","sent","$kiFmR","movieDescriptionMurkup","movieDescription","insertAdjacentHTML","$5HOzi","makeWatchTextContent","makeQueueTextContent","document","querySelector","addEventListener","$4cXS4","onAddWatchClick","onAddQueueClick","queued","getTrailer","then","results","setAttribute","$iU1Pc","Notify","failure","position","fontFamily","borderRadius","clickToClose","$dkUq4","handleClick","closeModal","apply","this","arguments","$82e0fb71ed8d4f6d$export$b055216bf7aaa057","setlang","$0f34ab67201c3500$var$onMyLibraryClick"],"version":3,"file":"mylibrary.84bdb624.js.map"}