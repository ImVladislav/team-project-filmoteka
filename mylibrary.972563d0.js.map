{"mappings":"iiBAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,uFAgCeE,I,OAAAA,EAAfC,EAAAF,EAAA,CAAAE,EAAAC,GAAAC,MAAA,SAAAC,EAA4BC,G,IAOpBC,EAEAC,EAEAC,E,qEAVmC,eAArCH,EAAEI,OAAOC,cAAcC,UAA0B,C,uDAIrD,EAAAC,EAAAC,eAEMP,EAAKD,EAAEI,OAAOC,cAAcI,QAAQR,G,SAEfS,EAAAC,UAAUC,gBAAgBX,G,cAA/CC,EAAYW,EAAAC,K,UAEQ,EAAAC,EAAAC,wBAAuBd,G,OAA3CC,EAAWU,EAAAC,KAEjBG,EAAAC,KAAKC,iBAAiBC,mBAAmB,YAAajB,GAEtDkB,SACGC,cAAc,sBACdC,iBAAiB,SAAS,W,OAAMC,gBAAgBtB,E,IACnDmB,SACGC,cAAc,oBACdC,iBAAiB,SAAS,W,OAAME,gBAAgBvB,E,iDApB1BwB,MAAAC,KAAAC,U,CA1B3BX,EAAAC,KAAKW,UAAUN,iBAAiB,SAEhC,WAKmCO,EAJjBC,KAAKC,MAAMC,aAAaC,QAAQ,UAK1CC,EAAeL,EAClBM,KAAI,SAAAC,G,IAAGC,EAAcD,EAAdC,eAAgBC,EAAKF,EAALE,MAAOC,EAAWH,EAAXG,YAAavC,EAAEoC,EAAFpC,GACpCwC,GAAM,EAAAC,EAAA,aAAYF,GAExB,MAAO,6CAEOG,OADsB1C,EAAG,0BACM0C,OAA/BF,EAAI,6BACSE,OADkBL,EAAe,yCAC3BK,OAANJ,EAAM,6E,IAIlCK,KAAM,IAEF3B,EAAAC,KAAK2B,eAAezB,mBAAoB,YAAYe,GAd7D,IAAmCL,EAC3BK,C,IAgBRlB,EAAAC,KAAK2B,eAAetB,iBAAkB,S,SAEVvB,G,OAAbL,EAAY+B,MAAAC,KAAAC,U","sources":["src/mylibrary.js","src/js/watchedMovies.js"],"sourcesContent":["import './js/modal';\nimport './js/modal-team';\nimport './js/watchedMovies';\n","import { refs } from './utilitiesJS/refs';\nimport { posterСheck } from './utilitiesJS/posterCheck';\nimport { onOpenModal } from './modal';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\n\nrefs.btnWathed.addEventListener('click', onBtnWatchedClick);\n\nfunction onBtnWatchedClick() {\n  const watched = JSON.parse(localStorage.getItem('watch'));\n  murkupGalleryOnBtnWatched(watched);\n}\n\nfunction murkupGalleryOnBtnWatched(movies) {\n  const moviesMurkup = movies\n    .map(({ original_title, title, poster_path, id }) => {\n      const src = posterСheck(poster_path);\n\n      return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">Drama, Action | 2020</p>\n      </li>`;\n    })\n    .join(``);\n\n  return refs.galleryLibrary.insertAdjacentHTML(`beforeend`, moviesMurkup);\n}\n\nrefs.galleryLibrary.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n\n  document\n    .querySelector('[data-add-watched]')\n    .addEventListener('click', () => onAddWatchClick(detailsMovie));\n  document\n    .querySelector('[data-add-queue]')\n    .addEventListener('click', () => onAddQueueClick(detailsMovie));\n}\n"],"names":["parcelRequire","$bpxeT","$51943685a991b61a$var$_onClickMovie","$parcel$interopDefault","$2TvXO","mark","_callee","e","id","detailsMovie","movieMurkup","target","parentElement","className","$5xtVg","onOpenModal","dataset","$jaaYu","serverApi","getDetailsMovie","_ctx","sent","$kiFmR","movieDescriptionMurkup","$hiFhO","refs","movieDescription","insertAdjacentHTML","document","querySelector","addEventListener","onAddWatchClick","onAddQueueClick","apply","this","arguments","btnWathed","movies","JSON","parse","localStorage","getItem","moviesMurkup","map","param","original_title","title","poster_path","src","$9PJ7S","concat","join","galleryLibrary"],"version":3,"file":"mylibrary.972563d0.js.map"}