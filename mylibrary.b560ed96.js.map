{"mappings":"iiBAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,0JAmDeE,I,OAAAA,EAAfC,EAAAF,EAAA,CAAAE,EAAAC,GAAAC,MAAA,SAAAC,EAA4BC,G,IAMpBC,EAEAC,EAEAC,EAMAC,EACAC,EACAC,E,qEAjBmC,eAArCN,EAAEO,OAAOC,cAAcC,UAA0B,C,uDAIrD,EAAAC,EAAAC,eACMV,EAAKD,EAAEO,OAAOC,cAAcI,QAAQX,G,SAEfY,EAAAC,UAAUC,gBAAgBd,G,cAA/CC,EAAYc,EAAAC,K,UAEQ,EAAAC,EAAAC,wBAAuBjB,G,OAA3CC,EAAWa,EAAAC,KAEjBG,EAAAC,KAAKC,iBAAiBC,mBAAmB,YAAapB,IACtD,EAAAqB,EAAAC,sBAAqBvB,IACrB,EAAAsB,EAAAE,sBAAqBxB,GAEfE,EAAWuB,SAASC,cAAc,sBAClCvB,EAAWsB,SAASC,cAAc,oBAClCtB,EAAgBqB,SAASC,cAAc,sBAE7CxB,EAASyB,iBAAiB,SAAS,W,OAAM,EAAAC,EAAAC,iBAAgB7B,E,IACzDG,EAASwB,iBAAiB,SAAS,W,OAAM,EAAAC,EAAAE,iBAAgB9B,E,IACzDI,EAAcuB,iBAAiB,QAASnB,EAAAuB,Y,6CAtBfC,MAAAC,KAAAC,U,CArC3BhB,EAAAC,KAAKgB,UAAUR,iBAAiB,SAEhC,SAASS,IACP,IACE,IAAMC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,UAChD,IAAKJ,EAIH,OAHAnB,EAAAC,KAAKuB,SAASC,UAAUC,IAAI,aAC5B1B,EAAAC,KAAK0B,aAAaxB,mBAAmB,YAAayB,sBAClD5B,EAAAC,KAAKgB,UAAUY,oBAAoB,QAASX,GAW1CY,EAPsBX,EAQzBY,KAAI,SAAAC,G,IAAGC,EAAcD,EAAdC,eAAgBC,EAAKF,EAALE,MAAOC,EAAWH,EAAXG,YAAatD,EAAEmD,EAAFnD,GACpCuD,GAAM,EAAAC,EAAA,aAAYF,GAExB,MAAO,6CAEOG,OADsBzD,EAAG,0BACMyD,OAA/BF,EAAI,6BACSE,OADkBL,EAAe,yCAC3BK,OAANJ,EAAM,6E,IAIlCK,KAAM,IAEDvC,EAAAC,KAAKuC,eAAeC,UAAYX,C,CAnBtC,MAAOY,GACPC,QAAQC,IAAIF,EAAMG,Q,CAItB,IACQf,C,IAgBR9B,EAAAC,KAAKuC,eAAe/B,iBAAkB,S,SAEV7B,G,OAAbL,EAAYuC,MAAAC,KAAAC,U,ICnD3BhB,EAAA3B,EAAA,S,cCAA2B,EAAA3B,EAAA,UDIA4B,KAAK6C,SAASrC,iBAAiB,SAE/B,WAMkCsC,EAJlB3B,KAAKC,MAAMC,aAAaC,QAAQ,UAKxCO,EAAeiB,EAClBhB,KAAI,SAAAC,G,IAAGC,EAAcD,EAAdC,eAAgBC,EAAKF,EAALE,MAAOC,EAAWH,EAAXG,YAAatD,EAAEmD,EAAFnD,GACpCuD,GAAM,EAAAC,EAAA,aAAYF,GAExB,MAAO,6CAEOG,OADsBzD,EAAG,0BACMyD,OAA/BF,EAAI,6BACSE,OADkBL,EAAe,yCAC3BK,OAANJ,EAAM,6E,IAIlCK,KAAM,IAEDvC,EAAAC,KAAKuC,eAAeC,UAAYX,EAd1C,IAAkCiB,EAC1BjB,C","sources":["src/mylibrary.js","src/js/watchedMovies.js","src/js/queueMovies.js","src/js/utilitiesJS/clearPage.js"],"sourcesContent":["import './js/modal';\nimport './js/modal-team';\nimport './js/watchedMovies';\nimport './js/queueMovies';\nimport './js/pagination';\nimport './js/theme-dark';\nimport './js/scrollTop';\n","import { refs } from './utilitiesJS/refs';\nimport { poster小heck } from './utilitiesJS/posterCheck';\nimport { onOpenModal } from './modal';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { onOpenModal } from './modal';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport { closeModal, onOpenModal } from './modal';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\n\nrefs.btnWathed.addEventListener('click', onBtnWatchedClick);\n\nfunction onBtnWatchedClick() {\n  try {\n    const watched = JSON.parse(localStorage.getItem('watch'));\n    if (!watched) {\n      refs.mainList.classList.add('not-films');\n      refs.containerLib.insertAdjacentHTML('beforeend', createMessage());\n      refs.btnWathed.removeEventListener('click', onBtnWatchedClick);\n      return;\n    }\n\n    murkupGalleryOnBtnWatched(watched);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction murkupGalleryOnBtnWatched(movies) {\n  const moviesMurkup = movies\n    .map(({ original_title, title, poster_path, id }) => {\n      const src = poster小heck(poster_path);\n\n      return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">Drama, Action | 2020</p>\n      </li>`;\n    })\n    .join(``);\n\n  return (refs.galleryLibrary.innerHTML = moviesMurkup);\n}\n\nrefs.galleryLibrary.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n\n  watchBtn.addEventListener('click', () => onAddWatchClick(detailsMovie));\n  queueBtn.addEventListener('click', () => onAddQueueClick(detailsMovie));\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","import { refs } from './utilitiesJS/refs';\nimport { poster小heck } from './utilitiesJS/posterCheck';\nimport { clearPage } from './utilitiesJS/clearPage';\n\nrefs.btnQueue.addEventListener('click', onBtnQueueClick);\n\nfunction onBtnQueueClick() {\n  // clearPage();\n  const queue = JSON.parse(localStorage.getItem('queue'));\n  murkupGalleryOnBtnQueued(queue);\n}\n\nfunction murkupGalleryOnBtnQueued(movies) {\n  const moviesMurkup = movies\n    .map(({ original_title, title, poster_path, id }) => {\n      const src = poster小heck(poster_path);\n\n      return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">Drama, Action | 2020</p>\n      </li>`;\n    })\n    .join(``);\n\n  return (refs.galleryLibrary.innerHTML = moviesMurkup);\n}\n","import { refs } from './refs';\n\nexport function clearPage() {\n  refs.galleryLibrary.innerHTML = '';\n}\n"],"names":["parcelRequire","$bpxeT","$51943685a991b61a$var$_onClickMovie","$parcel$interopDefault","$2TvXO","mark","_callee","e","id","detailsMovie","movieMurkup","watchBtn","queueBtn","closeModalBtn","target","parentElement","className","$5xtVg","onOpenModal","dataset","$jaaYu","serverApi","getDetailsMovie","_ctx","sent","$kiFmR","movieDescriptionMurkup","$hiFhO","refs","movieDescription","insertAdjacentHTML","$5HOzi","makeWatchTextContent","makeQueueTextContent","document","querySelector","addEventListener","$4cXS4","onAddWatchClick","onAddQueueClick","closeModal","apply","this","arguments","btnWathed","$51943685a991b61a$var$onBtnWatchedClick","watched","JSON","parse","localStorage","getItem","mainList","classList","add","containerLib","createMessage","removeEventListener","moviesMurkup","map","param","original_title","title","poster_path","src","$9PJ7S","concat","join","galleryLibrary","innerHTML","error","console","log","message","btnQueue","movies"],"version":3,"file":"mylibrary.b560ed96.js.map"}