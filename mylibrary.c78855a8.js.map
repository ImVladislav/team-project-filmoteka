{"mappings":"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","sources":["src/js/onLibraryClick.js","src/js/watchedMovies.js","src/js/utilitiesJS/createEmptyLibMessage.js","src/js/queueMovies.js"],"sourcesContent":["import { refs } from './utilitiesJS/refs';\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\nimport { onBtnWatchedClick } from './watchedMovies';\nimport { onBtnQueueClick } from './queueMovies';\n\nonMyLibraryClick();\n\nfunction onMyLibraryClick() {\n  try {\n    const watch = JSON.parse(localStorage.getItem('watch'));\n    const queue = JSON.parse(localStorage.getItem('queue'));\n\n    if (!watch && !queue) {\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', createMessage());\n      return;\n    }\n    if (watch && watch.length !== 0) {\n      onBtnWatchedClick();\n      return;\n    } else if ((queue && queue.length !== 0 && !watch) || watch.length === 0) {\n      onBtnQueueClick();\n      return;\n    } else {\n      refs.galleryLibrary.insertAdjacentHTML('beforeend', createMessage());\n      return;\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import Pagination from 'tui-pagination';\n\nimport { refs } from './utilitiesJS/refs';\nimport { posterСheck } from './utilitiesJS/posterCheck';\nimport { movieDescriptionMurkup } from './descriptionMurkup';\nimport { serverApi } from './utilitiesJS/serverApi';\nimport { onAddQueueClick, onAddWatchClick } from './addFavorites';\nimport { closeModal, onOpenModal } from './modal';\nimport { options } from './pagination';\nimport { genresArr } from './utilitiesJS/genres';\nimport {\n  makeQueueTextContent,\n  makeWatchTextContent,\n} from './utilitiesJS/modalBtnTextContent';\nimport { handleClick } from './treiler';\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\nimport { handleClick } from './treiler';\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\n\nrefs.btnWathed.addEventListener('click', onBtnWatchedClick);\n\nexport function onBtnWatchedClick() {\n  try {\n    const watched = JSON.parse(localStorage.getItem('watch'));\n\n    if (!watched || watched.length === 0) {\n      refs.galleryLibrary.innerHTML = createMessage();\n      refs.tuiContainer.classList.add('visually-hidden');\n      return;\n    } else {\n      options.totalItems = watched.length;\n      let start = 0;\n      let end = 20;\n\n      const handleSlice = currentPage => {\n        start = currentPage * options.itemsPerPage - 20;\n        end = currentPage * options.itemsPerPage;\n      };\n\n      refs.tuiContainer.classList.remove('visually-hidden');\n      murkupGalleryOnBtn(watched.slice(start, end));\n      const pagination = new Pagination(refs.tuiContainer, options);\n\n      pagination.on('beforeMove', event => {\n        const currentPage = event.page;\n        handleSlice(currentPage);\n        murkupGalleryOnBtn(watched.slice(start, end));\n      });\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport function murkupGalleryOnBtn(movies) {\n  const moviesMurkup = movies\n    .map(({ original_title, title, poster_path, id, genres, release_date }) => {\n      let genresMovie = null;\n      let releaseDate = null;\n\n      const genresId = genres.map(genre => genre.id);\n      const src = posterСheck(poster_path);\n\n      const genresMovies = genresArr.reduce((acc, genre) => {\n        if (genresId.includes(genre.id)) {\n          acc.push(genre.name);\n        }\n        return acc;\n      }, []);\n\n      if (genresMovies.length > 3) {\n        genresMovie = genresMovies.slice(0, 2);\n        genresMovie.splice(2, 1, 'Other');\n      } else if (genresMovies.length === 0) {\n        genresMovie = [`Genres not found`];\n      } else {\n        genresMovie = genresMovies;\n      }\n\n      if (release_date === '') {\n        releaseDate = 'Release data no found';\n      } else {\n        releaseDate = release_date.slice(0, 4);\n      }\n\n      return `\n        <li class=\"film__item\" data-id=\"${id}\">\n        <img src=\"${src}\" class=\"film__img\" alt=\"${original_title}\" />\n        <p class=\"film__title\">${title}</p>\n        <p class=\"film__genre\">${genresMovie.join(`, `)} | ${releaseDate}</p>\n      </li>`;\n    })\n    .join(``);\n\n  return (refs.galleryLibrary.innerHTML = moviesMurkup);\n}\n\nrefs.galleryLibrary.addEventListener(`click`, onClickMovie);\n\nasync function onClickMovie(e) {\n  if (e.target.parentElement.className !== 'film__item') {\n    return;\n  }\n\n  onOpenModal();\n  const id = e.target.parentElement.dataset.id;\n\n  const detailsMovie = await serverApi.getDetailsMovie(id);\n\n  const movieMurkup = await movieDescriptionMurkup(detailsMovie);\n\n  refs.movieDescription.insertAdjacentHTML('beforeend', movieMurkup);\n  makeWatchTextContent(detailsMovie);\n  makeQueueTextContent(detailsMovie);\n\n  const watchBtn = document.querySelector('[data-add-watched]');\n  const queueBtn = document.querySelector('[data-add-queue]');\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  const trailerBtn = document.querySelector('.btn-ytb');\n\n  watchBtn.addEventListener('click', () => {\n    onAddWatchClick(detailsMovie);\n    const watched = JSON.parse(localStorage.getItem('watch'));\n    murkupGalleryOnBtn(watched);\n  });\n  queueBtn.addEventListener('click', () => {\n    onAddQueueClick(detailsMovie);\n    const queued = JSON.parse(localStorage.getItem('queue'));\n    murkupGalleryOnBtn(queued);\n  });\n  trailerBtn.addEventListener('click', handleClick);\n  closeModalBtn.addEventListener('click', closeModal);\n}\n","export function createMessage() {\n  const messageMarkup = `<div class=\"message-wrap\" >\n      <p class=\"sorry\">Sorry...</p>\n      <p class=\"message\">\n        You haven't added any movies yet. Hope you fix this soon :)\n      </p>\n      <a href=\"/src/index.html\" class=\"library__button accent\">Filmoteka</a>\n    </div>`;\n  return messageMarkup;\n}\n","import Pagination from 'tui-pagination';\nimport { refs } from './utilitiesJS/refs';\nimport { options } from './pagination';\nimport { createMessage } from './utilitiesJS/createEmptyLibMessage';\nimport { murkupGalleryOnBtn } from './watchedMovies';\n\nrefs.btnQueue.addEventListener('click', onBtnQueueClick);\n\nexport function onBtnQueueClick() {\n  try {\n    const queue = JSON.parse(localStorage.getItem('queue'));\n\n    if (!queue || queue.length === 0) {\n      refs.galleryLibrary.innerHTML = createMessage();\n      refs.tuiContainer.classList.add('visually-hidden');\n      return;\n    } else {\n      options.totalItems = queue.length;\n      let start = 0;\n      let end = 20;\n\n      const handleSlice = currentPage => {\n        start = currentPage * options.itemsPerPage - 20;\n        end = currentPage * options.itemsPerPage;\n      };\n\n      refs.tuiContainer.classList.remove('visually-hidden');\n      murkupGalleryOnBtn(queue.slice(start, end));\n\n      const pagination = new Pagination(refs.tuiContainer, options);\n\n      pagination.on('beforeMove', event => {\n        const currentPage = event.page;\n        handleSlice(currentPage);\n        murkupGalleryOnBtn(queue.slice(start, end));\n      });\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"],"names":["$3fz09","parcelRequire","$fb9GJ","$c5c7efe92cb3f8dd$export$e3cd2a9e9061f2c1","watched","JSON","parse","localStorage","getItem","length","refs","galleryLibrary","innerHTML","tuiContainer","classList","add","$2nhTy","options","totalItems","start","end","handleSlice","currentPage","itemsPerPage","remove","$c5c7efe92cb3f8dd$export$bf050b535a158915","slice","$parcel$interopDefault","on","event","page","error","console","log","message","movies","moviesMurkup","map","original_title","title","poster_path","id","genres","release_date","genresMovie","releaseDate","genresId","genre","src","$1fedI","genresMovies","$bRnc2","genresArr","reduce","acc","includes","push","name","splice","join","btnWathed","addEventListener","async","e","target","parentElement","className","$bTcpz","onOpenModal","dataset","detailsMovie","$185lj","serverApi","getDetailsMovie","movieMurkup","$it60l","movieDescriptionMurkup","movieDescription","insertAdjacentHTML","$lFT8c","makeWatchTextContent","makeQueueTextContent","watchBtn","document","querySelector","queueBtn","closeModalBtn","trailerBtn","$9Co7P","onAddWatchClick","onAddQueueClick","$c8VpK","handleClick","closeModal","$9635c521914b1c37$export$b055216bf7aaa057","queue","btnQueue","watch","$329f78f0a101c0d2$var$onMyLibraryClick"],"version":3,"file":"mylibrary.c78855a8.js.map"}